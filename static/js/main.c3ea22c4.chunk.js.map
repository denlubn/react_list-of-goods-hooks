{"version":3,"sources":["App.tsx","GoodList.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","App","useState","DEFAULT","sortParameter","setSortParameter","isReversed","setIsReversed","visibleGoods","preparedGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getPreparedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,4ECbQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDLAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,oBAAAA,E,gBAAAA,E,mBAAAA,M,KAuCE,IAAMM,EAAgB,WAC3B,MAA0CC,mBAASP,EAASQ,SAA5D,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA/BR,SACEX,EADF,GAGG,IADCO,EACF,EADEA,cAAeE,EACjB,EADiBA,WAEXG,EAAa,YAAOZ,GAqB1B,OAnBIO,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKT,EAASkB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXV,GACFG,EAAcQ,UAGTR,EAMcS,CACnBlB,EAAiB,CAAEI,gBAAeE,eAGpC,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAkBT,EAASkB,WAEzCS,QAAS,kBAAMjB,EAAiBV,EAASkB,WAL3C,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYjB,IAAkBT,EAASoB,SAEzCO,QAAS,kBAAMjB,EAAiBV,EAASoB,SAL3C,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaf,IAEfgB,QAAS,kBAAMf,GAAeD,IALhC,sBAUEF,IAAkBT,EAASQ,SAAWG,IACtC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAiBV,EAASQ,SAC1BI,GAAc,IALlB,sBAcJ,cAAC,EAAD,CAAUV,MAAOW,QE9GvBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c3ea22c4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\nimport { GoodList } from './GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n  DEFAULT = 'default',\n}\n\ntype SortingOptions = {\n  sortParameter: SortType;\n  isReversed: boolean;\n};\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortParameter, isReversed }: SortingOptions,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortParameter) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortParameter) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortParameter, setSortParameter] = useState(SortType.DEFAULT);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortParameter, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortParameter !== SortType.ALPHABET,\n          })}\n          onClick={() => setSortParameter(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortParameter !== SortType.LENGTH,\n          })}\n          onClick={() => setSortParameter(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortParameter !== SortType.DEFAULT || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortParameter(SortType.DEFAULT);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}